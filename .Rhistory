knitr::opts_chunk$set(cache = TRUE, echo = TRUE)
library(knitr)
library(tidyverse)
library(png)
mtcars$
mtcars$s
names(mtcars)
data(package = .packages(all.available = TRUE))
library(gapminder)
install.packages("gapminder")
library(gapminder)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_x_log10() +
facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_x_log10() +
facet_wrap(~continent)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_line(alpha = 0.7, show.legend = FALSE) +
scale_x_log10() +
facet_wrap(~continent)
gapminder$year
max(gapminder$year)
gapminder %>%
filter(year=="2007") %>%
ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_line(alpha = 0.7, show.legend = FALSE) +
scale_x_log10() +
facet_wrap(~continent)
gapminder %>%
filter(year=="2007") %>%
ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_x_log10() +
facet_wrap(~continent)
gapminder %>%
filter(year=="2007") %>%
ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_x_log10()
gapminder %>%
filter(year=="2007") %>%
ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_x_log()
?scale_x_log
??scale_x_log
library(tidyverse)
?scale_x_log
?scale_x_log10
library(gapminder)
gapminder %>%
filter(year=="2007") %>%
ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_x_log10()
gapminder$continent
library(gapminder)
gapminder %>%
filter(year=="2007") %>%
ggplot(aes(gdpPercap, lifeExp, size = pop, colour = continent)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_x_log10() +
title("Life expectancy and GDP per capita, 2007")
library(gapminder)
gapminder %>%
filter(year=="2007") %>%
ggplot(aes(gdpPercap, lifeExp, size = pop, colour = continent)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_x_log10() +
ggtitle("Life expectancy and GDP per capita, 2007")
gapminder %>%
filter(year=="2007") %>%
ggplot(aes(gdpPercap, lifeExp, size = pop, colour = continent)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
ggtitle("Life expectancy and GDP per capita, 2007")
swirl
swirl()
library(swirl)
Arun
swirl()
devtools::install_github("RamiKrispin/coronavirus")
install.packages("devtools")
devtools::install_github("RamiKrispin/coronavirus")
1
library(coronavirus)
names(coronavirus)
coronavirus$country
corona_uk <- coronavirus[coronavirus$country=="United Kingdom", ]
plot(corona_uk$date, corona_uk$cases)
corona_uk$cases
corona_uk$date
library(coronavirus)
names(coronavirus)
corona_uk <- coronavirus[coronavirus$country=="United Kingdom", ]
plot(corona_uk$date, corona_uk$cases)
corona_uk$province
lines(corona_uk$date, corona_uk$cases)
plot(corona_uk$date, corona_uk$cases)
head(corona_uk)
unique(corona_uk$province)
corona_uk <- coronavirus[coronavirus$country=="Germany", ]
plot(corona_uk$date, corona_uk$cases)
unique(corona_uk$province)
corona_uk <- coronavirus[coronavirus$country=="Germany", ]
plot(corona_uk$date, corona_uk$cases)
unique(corona_uk$province)
head(corona_uk)
sort(corona_uk, corona_uk$date)
sort(corona_uk)
?sort
corona_uk[sort(corona_uk$date)]
corona_uk[sort(corona_uk$date), ]
View(corona_uk)
corona_uk <- coronavirus[coronavirus$country=="Germany" &
coronavirus$type=="death", ]
library(coronavirus)
names(coronavirus)
corona_uk <- coronavirus[coronavirus$country=="Germany" &
coronavirus$type=="death", ]
plot(corona_uk$date, corona_uk$cases)
View(corona_uk)
?plot
?base::plot
library(coronavirus)
names(coronavirus)
corona_de <- coronavirus[coronavirus$country=="Germany" &
coronavirus$type=="death", ]
plot(x = corona_de$date,
y = corona_de$cases,
type = "l")
library(coronavirus)
corona_de <- coronavirus[coronavirus$country=="Germany" &
coronavirus$type=="death", ]
corona_de$death_7 <-  zoo::rollmean(corona_de$cases, k = 7, fill = NA)
plot(x = corona_de$date,
y = corona_de$cases,
type = "l")
plot(x = corona_de$date,
y = corona_de$death_7,
type = "l",
col = "red",
add = TRUE)
library(coronavirus)
corona_de <- coronavirus[coronavirus$country=="Germany" &
coronavirus$type=="death", ]
corona_de$death_7 <-  zoo::rollmean(corona_de$cases, k = 7, fill = NA)
plot(x = corona_de$date,
y = corona_de$cases,
type = "l")
lines(x = corona_de$date,
y = corona_de$death_7,
type = "l",
col = "red",
add = TRUE)
library(coronavirus)
corona_de <- coronavirus[coronavirus$country=="Germany" &
coronavirus$type=="death", ]
corona_de$death_7 <-  zoo::rollmean(corona_de$cases, k = 7, fill = NA)
plot(x = corona_de$date,
y = corona_de$cases,
type = "l")
lines(x = corona_de$date,
y = corona_de$death_7,
type = "l",
col = "red")
remotes::install_github("yihui/xaringan")
library(xaringan)
